/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.soapboxrace.jlauncher.swing;

import java.io.File;
import java.io.IOException;

import javax.swing.JFileChooser;

import br.com.soapboxrace.jlauncher.LoginCreate;
import br.com.soapboxrace.jlauncher.Main;
import br.com.soapboxrace.jlauncher.util.ServerList;
import br.com.soapboxrace.jlauncher.vo.ConfigVO;
import br.com.soapboxrace.jlauncher.vo.LoginOkVO;
import javax.swing.ImageIcon;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author nils
 */
public class MainWindow extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5483993078168848130L;

	private LoginOkVO loginOkVO;
	private ConfigVO configVO = Main.loadConfig();
	private ServerList serverList = new ServerList();

	/**
	 * Creates new form MainWindow
	 */
	public MainWindow() {
		initComponents();
                ImageIcon img = new ImageIcon("icon.png");
                this.setIconImage(img.getImage());
                String passwordSHA1 = configVO.getPasswordSHA1();
		serverAddrCombo.removeAllItems();
		serverAddrCombo.addItem(configVO.getServerURL());
                if (configVO.getEmail().equals("")){
                    PromptSupport.setPrompt("Username", loginEmailText);
                }else{
		loginEmailText.setText(configVO.getEmail());}
		if (!configVO.getGameExePath().isEmpty()) {
			pathLabel.setText(configVO.getGameExePath());
			checkGameFile(configVO.getGameExePath());
		}
		
		if (passwordSHA1.equals("da39a3ee5e6b4b0d3255bfef95601890afd80709")) {
			PromptSupport.setPrompt("Password", loginPasswordText);
		}else {
                        loginPasswordText.setText(passwordSHA1);
                }
		loginSaveCredentialsCheckBox.setSelected(configVO.isSaveCredentials());
                PromptSupport.setPrompt("Enter your email address", createEmailText);
                PromptSupport.setPrompt("Enter your password", createPasswd1Text);
                PromptSupport.setPrompt("Re-enter your password", createPasswd2Text);
                PromptSupport.setPrompt("Only for Closed Beta(Enter Your Ticket Code)", createTicketText);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        mainTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        loginEmailText = new javax.swing.JTextField();
        loginPasswordText = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        loginSaveCredentialsCheckBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        createTicketText = new javax.swing.JTextField();
        createPasswd2Text = new javax.swing.JPasswordField();
        createEmailText = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();
        createPasswd1Text = new javax.swing.JPasswordField();
        pathLabel = new javax.swing.JLabel();
        changeGamePathButton = new javax.swing.JButton();
        serverAddrCombo = new javax.swing.JComboBox<>();
        srvListButton = new javax.swing.JButton();
        launchButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SoapBox Racing World Launcher");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainTabbedPane.setBackground(new java.awt.Color(0, 102, 204));
        mainTabbedPane.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(0, 102, 204));

        loginEmailText.setEnabled(false);

        loginPasswordText.setEnabled(false);

        loginButton.setBackground(new java.awt.Color(0, 0, 153));
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("Login");
        loginButton.setEnabled(false);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        loginSaveCredentialsCheckBox.setBackground(new java.awt.Color(0, 0, 0));
        loginSaveCredentialsCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        loginSaveCredentialsCheckBox.setText("Save Username & Password");
        loginSaveCredentialsCheckBox.setEnabled(false);
        loginSaveCredentialsCheckBox.setOpaque(false);
        loginSaveCredentialsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginSaveCredentialsCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loginEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(loginSaveCredentialsCheckBox))))
                .addContainerGap(670, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginSaveCredentialsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginButton)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Launcher", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 102, 204));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createTicketText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTicketTextActionPerformed(evt);
            }
        });
        jPanel3.add(createTicketText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 260, -1));

        createPasswd2Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPasswd2TextActionPerformed(evt);
            }
        });
        jPanel3.add(createPasswd2Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 260, -1));
        jPanel3.add(createEmailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 260, -1));

        createButton.setBackground(new java.awt.Color(0, 0, 153));
        createButton.setForeground(new java.awt.Color(255, 255, 255));
        createButton.setText("Create Account");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });
        jPanel3.add(createButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, -1, -1));
        jPanel3.add(createPasswd1Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 260, -1));

        mainTabbedPane.addTab("Create Account", jPanel3);

        jPanel1.add(mainTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, 166));

        pathLabel.setForeground(new java.awt.Color(255, 255, 255));
        pathLabel.setText("Please choose the game file(nfsw.exe)");
        jPanel1.add(pathLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 370, 20));

        changeGamePathButton.setBackground(new java.awt.Color(0, 51, 255));
        changeGamePathButton.setForeground(new java.awt.Color(255, 255, 255));
        changeGamePathButton.setText("Change Game Path");
        changeGamePathButton.setToolTipText("");
        changeGamePathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeGamePathButtonActionPerformed(evt);
            }
        });
        jPanel1.add(changeGamePathButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 140, 18));

        serverAddrCombo.setBackground(new java.awt.Color(51, 51, 255));
        serverAddrCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Server" }));
        serverAddrCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverAddrComboActionPerformed(evt);
            }
        });
        jPanel1.add(serverAddrCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 343, -1));

        srvListButton.setBackground(new java.awt.Color(51, 51, 255));
        srvListButton.setForeground(new java.awt.Color(255, 255, 255));
        srvListButton.setText("Check Available Servers");
        srvListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srvListButtonActionPerformed(evt);
            }
        });
        jPanel1.add(srvListButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        launchButton.setText("Launch Game");
        launchButton.setEnabled(false);
        launchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(launchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, 130, 20));

        messageLabel.setForeground(new java.awt.Color(255, 255, 255));
        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageLabel.setText("<html><b>SoapBox Race World Online Launcher beta v0.0.5</b></html>");
        jPanel1.add(messageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 409, -1));
        messageLabel.getAccessibleContext().setAccessibleName("messageLabel");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/po.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 240));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void srvListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srvListButtonActionPerformed
        serverAddrCombo.removeAllItems();
		try {
			String[] serverListStr = serverList.getServerList();
			for (String string : serverListStr) {
				serverAddrCombo.addItem(string);
			}
		} catch (Exception e) {
			setErrorMessage("Error loading server list");
		}
    }//GEN-LAST:event_srvListButtonActionPerformed

    private void serverAddrComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverAddrComboActionPerformed
        serverAddrCombo.getItemAt(0);
    }//GEN-LAST:event_serverAddrComboActionPerformed

    private void launchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchButtonActionPerformed
        String token = loginOkVO.getLoginToken();
		String userId = loginOkVO.getUserId();
		String srvStr = getUrl() + "/soapbox-race-core/Engine.svc";
		String gamePath = pathLabel.getText();
		ProcessBuilder processBuilder = new ProcessBuilder(gamePath, "US", srvStr, token, userId);
		try {
			processBuilder.start();
			System.exit(0);
		} catch (IOException e) {
			setErrorMessage(e.getMessage());
		}
    }//GEN-LAST:event_launchButtonActionPerformed

    private void changeGamePathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeGamePathButtonActionPerformed
		int returnVal = fileChooser.showOpenDialog(this);
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			File file = fileChooser.getSelectedFile();
			String path = file.getAbsolutePath();
			pathLabel.setText(path);
			Main.saveGamePath(path);
			checkGameFile(path);
		}
    }//GEN-LAST:event_changeGamePathButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
		if (!Main.copyModules(pathLabel.getText())) {
			setErrorMessage("Can't copy module files to game folder, please check folder permissions, or run as admin");
			launchButton.setEnabled(false);
			return;
		}
		try {
			String url = getUrl();
			String email = createEmailText.getText();
			String password1 = new String(createPasswd1Text.getPassword());
			String password2 = new String(createPasswd2Text.getPassword());
			String ticket = createTicketText.getText();
			LoginCreate create = Main.create(url, email, password1);
			boolean doCreate = create.doCreate(password2, ticket);
			if (!doCreate) {
				launchButton.setEnabled(false);
				setErrorMessage(create.getMessage());
			} else {
				launchButton.setEnabled(true);
				setMessage(create.getMessage() + " Launch Game!");
			}
			loginOkVO = create.getLoginOkVO();
		} catch (Exception e) {
			setErrorMessage(e.getMessage());
		}
    }//GEN-LAST:event_createButtonActionPerformed

    private void createPasswd2TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPasswd2TextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createPasswd2TextActionPerformed

    private void loginSaveCredentialsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginSaveCredentialsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginSaveCredentialsCheckBoxActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
if (!Main.copyModules(pathLabel.getText())) {
			setErrorMessage("Can't copy module files to game folder, please check folder permissions, or run as admin");
			launchButton.setEnabled(false);
			return;
		}
		String url = getUrl();
		String email = loginEmailText.getText();
		String password = new String(loginPasswordText.getPassword());
		LoginCreate login = Main.login(url, email, password, loginSaveCredentialsCheckBox.isSelected());
		if (login.doLogin()) {
			loginOkVO = login.getLoginOkVO();
			launchButton.setEnabled(true);
			setMessage("Login OK, Launch Game!");
		} else {
			loginOkVO = null;
			String message = login.getMessage();
			launchButton.setEnabled(false);
			setErrorMessage(message);
		}
    }//GEN-LAST:event_loginButtonActionPerformed

    private void createTicketTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTicketTextActionPerformed

    }//GEN-LAST:event_createTicketTextActionPerformed

	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> {
                    new MainWindow().setVisible(true);
                });
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changeGamePathButton;
    private javax.swing.JButton createButton;
    private javax.swing.JTextField createEmailText;
    private javax.swing.JPasswordField createPasswd1Text;
    private javax.swing.JPasswordField createPasswd2Text;
    private javax.swing.JTextField createTicketText;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton launchButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField loginEmailText;
    private javax.swing.JPasswordField loginPasswordText;
    private javax.swing.JCheckBox loginSaveCredentialsCheckBox;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel pathLabel;
    private javax.swing.JComboBox<String> serverAddrCombo;
    private javax.swing.JButton srvListButton;
    // End of variables declaration//GEN-END:variables

	public void setErrorMessage(String message) {
		messageLabel.setText("<html><font color='red'><b>" + message + "</b></font></html>");
	}

	public void setMessage(String message) {
		messageLabel.setText("<html><b>" + message + "</b></html>");
	}

	public void enableAll() {
		mainTabbedPane.setEnabled(true);
		loginEmailText.setEnabled(true);
		loginPasswordText.setEnabled(true);
		loginSaveCredentialsCheckBox.setEnabled(true);
		loginButton.setEnabled(true);
	}

	public void disableAll() {
		mainTabbedPane.setSelectedIndex(0);
		mainTabbedPane.setEnabled(false);
		loginEmailText.setEnabled(false);
		loginPasswordText.setEnabled(false);
		loginSaveCredentialsCheckBox.setEnabled(false);
		loginButton.setEnabled(false);
	}

	private void checkGameFile(String path) {
		if (Main.checkGameMd5(path)) {
			enableAll();
			setMessage("SoapBox Race World Online Launcher beta v0.0.5");
		} else {
			disableAll();
			setErrorMessage("Invalid or modded game file!");
		}
	}

	private String getUrl() {
		String selectedItem = (String) serverAddrCombo.getSelectedItem();
		String[] split = selectedItem.split(";");
		System.out.println(split[1]);
		return split[1];
	}
}
