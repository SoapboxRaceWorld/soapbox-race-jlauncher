/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.soapboxrace.jlauncher.swing;

import java.io.File;
import java.io.IOException;
import java.util.Locale;
import java.util.ResourceBundle;

import javax.swing.JFileChooser;

import br.com.soapboxrace.jlauncher.LoginCreate;
import br.com.soapboxrace.jlauncher.Main;
import br.com.soapboxrace.jlauncher.util.ServerList;
import br.com.soapboxrace.jlauncher.vo.ConfigVO;
import br.com.soapboxrace.jlauncher.vo.LoginOkVO;
import java.io.DataOutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author nils and Vanquish
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     *
     */
    private static final long serialVersionUID = 5483993078168848130L;

    private LoginOkVO loginOkVO;
    private ConfigVO configVO = Main.loadConfig();
    private ServerList serverList = new ServerList();
    private ResourceBundle Text = ResourceBundle.getBundle("locales.locale", Locale.getDefault());

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        serverAddrCombo.removeAllItems();
        serverAddrCombo.addItem(configVO.getServerURL());
        if (!configVO.getGameExePath().isEmpty()) {
            pathLabel.setText(configVO.getGameExePath());
            checkGameFile(configVO.getGameExePath());
        }
        String passwordSHA1 = configVO.getPasswordSHA1();
        loginSaveCredentialsCheckBox.setSelected(configVO.isSaveCredentials());
        if (configVO.getEmail().equals("")) {
            PromptSupport.setPrompt(Text.getString("launcher.email"), loginEmailText);
        } else {
            loginEmailText.setText(configVO.getEmail());
        }
        if (passwordSHA1.equals("")) {
            PromptSupport.setPrompt(Text.getString("launcher.password"), loginPasswordText);
        } else {
            loginPasswordText.setText("********************");
        }
        loginSaveCredentialsCheckBox.setSelected(configVO.isSaveCredentials());
        PromptSupport.setPrompt(Text.getString("create.email"), createEmailText);
        PromptSupport.setPrompt(Text.getString("create.password"), createPasswd1Text);
        PromptSupport.setPrompt(Text.getString("create.confirm.password"), createPasswd2Text);
        PromptSupport.setPrompt(Text.getString("create.invite.ticket"), createTicketText);
        PromptSupport.setPrompt(Text.getString("create.email"), EmailForPassword);
        loginRegisterTabbedPanel.addTab(Text.getString("launcher.login"), loginTab);
        loginRegisterTabbedPanel.addTab(Text.getString("register.tab"), registerTab);
        loginRegisterTabbedPanel.addTab(Text.getString("options.tab"), optionsTab);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        mainPanel = new javax.swing.JPanel();
        loginRegisterTabbedPanel = new javax.swing.JTabbedPane();
        loginTab = new javax.swing.JPanel();
        loginEmailText = new javax.swing.JTextField();
        loginPasswordText = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        loginSaveCredentialsCheckBox = new javax.swing.JCheckBox();
        ForgotYourPasswordRedirect = new javax.swing.JLabel();
        registerTab = new javax.swing.JPanel();
        createTicketText = new javax.swing.JTextField();
        createPasswd1Text = new javax.swing.JPasswordField();
        createPasswd2Text = new javax.swing.JPasswordField();
        createEmailText = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();
        optionsTab = new javax.swing.JPanel();
        ChangeLauncherLanguageLabel = new javax.swing.JLabel();
        ChooseLauncherLanguage = new javax.swing.JComboBox<>();
        ConfirmLanguageChange = new javax.swing.JButton();
        ForgotYourPassword = new javax.swing.JLabel();
        EmailForPassword = new javax.swing.JTextField();
        SendEmail = new javax.swing.JButton();
        pathLabel = new javax.swing.JLabel();
        changeGamePathButton = new javax.swing.JButton();
        launchButton = new javax.swing.JButton();
        messageBase = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        serverAddrCombo = new javax.swing.JComboBox<>();
        srvListButton = new javax.swing.JButton();
        serverInfoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SoapBox World Racing Launcher");

        loginRegisterTabbedPanel.setEnabled(false);

        loginEmailText.setEnabled(false);
        loginEmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginEmailTextActionPerformed(evt);
            }
        });

        loginPasswordText.setEnabled(false);

        loginButton.setText(Text.getString("launcher.login"));
        loginButton.setEnabled(false);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        loginSaveCredentialsCheckBox.setEnabled(false);
        loginSaveCredentialsCheckBox.setLabel(Text.getString("launcher.save.credentials"));

        ForgotYourPasswordRedirect.setText(Text.getString("launcher.login.forgot.password"));
        ForgotYourPasswordRedirect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ForgotYourPasswordRedirectMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout loginTabLayout = new javax.swing.GroupLayout(loginTab);
        loginTab.setLayout(loginTabLayout);
        loginTabLayout.setHorizontalGroup(
            loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginTabLayout.createSequentialGroup()
                        .addComponent(ForgotYourPasswordRedirect, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                        .addGap(28, 28, 28)
                        .addComponent(loginButton))
                    .addComponent(loginEmailText, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginPasswordText, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(loginTabLayout.createSequentialGroup()
                        .addComponent(loginSaveCredentialsCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        loginTabLayout.setVerticalGroup(
            loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginSaveCredentialsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(ForgotYourPasswordRedirect))
                .addContainerGap())
        );

        loginRegisterTabbedPanel.addTab("Login", loginTab);

        createButton.setText(Text.getString("create.create.account.btn"));
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerTabLayout = new javax.swing.GroupLayout(registerTab);
        registerTab.setLayout(registerTabLayout);
        registerTabLayout.setHorizontalGroup(
            registerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerTabLayout.createSequentialGroup()
                .addGroup(registerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(registerTabLayout.createSequentialGroup()
                        .addGap(0, 544, Short.MAX_VALUE)
                        .addComponent(createButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, registerTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(registerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createPasswd1Text)
                            .addComponent(createEmailText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createTicketText)
                            .addComponent(createPasswd2Text, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap())
        );
        registerTabLayout.setVerticalGroup(
            registerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createPasswd1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createPasswd2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createTicketText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(createButton)
                .addContainerGap())
        );

        loginRegisterTabbedPanel.addTab("Register", registerTab);

        ChangeLauncherLanguageLabel.setText(Text.getString("options.change.language"));

        ChooseLauncherLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { Text.getString("options.choose.language"), "اللغة العربية الفصحى","বাংলা" , "български", "čeština", "Deutsch","English" , "español(España)", "español(latín)", "Français","Bahasa Indonesia" , "italiano", "日本語", "português(Brasil)","português(Portugal)","român", "slovenščina", "Türkçe" }));

        ConfirmLanguageChange.setText(Text.getString("options.okay.btn"));
        ConfirmLanguageChange.setToolTipText("");
        ConfirmLanguageChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmLanguageChangeActionPerformed(evt);
            }
        });

        ForgotYourPassword.setText(Text.getString("launcher.login.forgot.password"));

        EmailForPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailForPasswordActionPerformed(evt);
            }
        });

        SendEmail.setText(Text.getString("options.send.email.btn"));
        SendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsTabLayout = new javax.swing.GroupLayout(optionsTab);
        optionsTab.setLayout(optionsTabLayout);
        optionsTabLayout.setHorizontalGroup(
            optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChangeLauncherLanguageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(optionsTabLayout.createSequentialGroup()
                        .addComponent(ForgotYourPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(289, 289, 289))
                    .addComponent(ChooseLauncherLanguage, 0, 633, Short.MAX_VALUE)
                    .addComponent(EmailForPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(optionsTabLayout.createSequentialGroup()
                        .addGroup(optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SendEmail)
                            .addComponent(ConfirmLanguageChange))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        optionsTabLayout.setVerticalGroup(
            optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ChangeLauncherLanguageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChooseLauncherLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConfirmLanguageChange)
                .addGap(13, 13, 13)
                .addComponent(ForgotYourPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EmailForPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SendEmail)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        loginRegisterTabbedPanel.addTab("Options", optionsTab);

        pathLabel.setText(Text.getString("main.choose.game.path"));

        changeGamePathButton.setText(Text.getString("main.change.game.path.btn"));
        changeGamePathButton.setToolTipText("");
        changeGamePathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeGamePathButtonActionPerformed(evt);
            }
        });

        launchButton.setText(Text.getString("main.launch.game"));
        launchButton.setEnabled(false);
        launchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchButtonActionPerformed(evt);
            }
        });

        messageBase.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageLabel.setText("<html><b>SoapBox Race World Online Launcher Beta v0.0.7</b></html>");

        javax.swing.GroupLayout messageBaseLayout = new javax.swing.GroupLayout(messageBase);
        messageBase.setLayout(messageBaseLayout);
        messageBaseLayout.setHorizontalGroup(
            messageBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel)
                .addContainerGap())
        );
        messageBaseLayout.setVerticalGroup(
            messageBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messageBaseLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        messageLabel.getAccessibleContext().setAccessibleName("messageLabel");

        serverAddrCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { Text.getString("main.select.server.jcombobox") }));
        serverAddrCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverAddrComboActionPerformed(evt);
            }
        });

        srvListButton.setText(Text.getString("main.get.server.list.btn"));
        srvListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srvListButtonActionPerformed(evt);
            }
        });

        serverInfoButton.setText(Text.getString("main.get.server.info.btn"));
        serverInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginRegisterTabbedPanel, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(messageBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(launchButton))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(changeGamePathButton)
                                .addGap(18, 18, 18)
                                .addComponent(pathLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(serverAddrCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(srvListButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serverInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(serverAddrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srvListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(changeGamePathButton)
                        .addComponent(pathLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginRegisterTabbedPanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(launchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void serverInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverInfoButtonActionPerformed
        String URL;
        URL = getUrl();
        try {
            new ServerInfo(URL).setVisible(true);
        } catch (NullPointerException e) {
            setErrorMessage(Text.getString("ServerInformationNotAvailable"));
        }
    }//GEN-LAST:event_serverInfoButtonActionPerformed

    private void EmailForPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailForPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailForPasswordActionPerformed

    private void ForgotYourPasswordRedirectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForgotYourPasswordRedirectMouseClicked
        loginRegisterTabbedPanel.setSelectedIndex(3);
    }//GEN-LAST:event_ForgotYourPasswordRedirectMouseClicked

    private void SendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendEmailActionPerformed
        String URL = getUrl();
        String Email = EmailForPassword.getText();
        Email = Email.replace("@", "%40");
        Email = "email=" + Email;
        URL url;
        try {
            url = new URL(URL + "/soapbox-race-core/Engine.svc/RecoveryPassword/forgotPassword");
        } catch (MalformedURLException ex) {
            setErrorMessage(Text.getString("error.server.no.recovery"));
            return;
        }
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
            RequestBody body = RequestBody.create(mediaType, Email);
            Request request = new Request.Builder()
                    .url(url)
                    .post(body)
                    .addHeader("content-type", "application/x-www-form-urlencoded")
                    .addHeader("cache-control", "no-cache")
                    .addHeader("postman-token", "afd1c62b-949a-54dd-b359-5f9052d3b553")
                    .build();
            Response response = null;
        try {
            response = client.newCall(request).execute();
        } catch (IOException ex) {
           setErrorMessage(Text.getString("error.server.no.recovery"));
        }
        
        String finalResponse;
        try {
            finalResponse = response.body().string();
        } catch (IOException | NullPointerException ex) {
            setErrorMessage(Text.getString("error.server.no.recovery"));
            return;
        }
        String[] ErrorOrSent = finalResponse.split(":");
        String emailsent = ErrorOrSent[1].replace("[","");
        emailsent = emailsent.replace("]", "");
        if(ErrorOrSent[0].equals("Link to reset password sent to")){
         setMessage(Text.getString("message.forgot.password.email.sent") + emailsent);
        }else {
            if(ErrorOrSent[1].equals(" Invalid email!")){
                setErrorMessage(Text.getString("error.forgot.password.invalid.email"));
            } else{
                setErrorMessage(Text.getString("error.forgot.password.already.sent"));
            }
        }

    }//GEN-LAST:event_SendEmailActionPerformed

    private void ConfirmLanguageChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmLanguageChangeActionPerformed
        int p = ChooseLauncherLanguage.getSelectedIndex();
        if (ChooseLauncherLanguage.getSelectedIndex() == 0) {
            setErrorMessage(Text.getString("error.select.langauge"));
            return;
        }
        configVO.setLocale(p);
        Main.saveLocale(p);
        if (p == 1) {
            Locale.setDefault(new Locale("ar"));
        } else if (p == 2) {
            Locale.setDefault(new Locale("bn", "IN"));
        } else if (p == 3) {
            Locale.setDefault(new Locale("bg", "BG"));
        } else if (p == 4) {
            Locale.setDefault(new Locale("cs", "CZ"));
        } else if (p == 5) {
            Locale.setDefault(new Locale("de"));
        } else if (p == 6) {
            Locale.setDefault(new Locale("en"));
        } else if (p == 7) {
            Locale.setDefault(new Locale("es", "ES"));
        } else if (p == 8) {
            Locale.setDefault(new Locale("es", "PY"));
        } else if (p == 9) {
            Locale.setDefault(new Locale("fr"));
        } else if (p == 10) {
            Locale.setDefault(new Locale("in", "ID"));
        } else if (p == 11) {
            Locale.setDefault(new Locale("it", "IT"));
        } else if (p == 12) {
            Locale.setDefault(new Locale("ja", "JP"));
        } else if (p == 13) {
            Locale.setDefault(new Locale("pt", "BR"));
        } else if (p == 14) {
            Locale.setDefault(new Locale("pt", "PT"));
        } else if (p == 15) {
            Locale.setDefault(new Locale("ro", "RO"));
        } else if (p == 16) {
            Locale.setDefault(new Locale("sl", "SI"));
        } else if (p == 17) {
            Locale.setDefault(new Locale("tr", "TR"));
        }
        new MainWindow().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ConfirmLanguageChangeActionPerformed

    private void loginEmailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginEmailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginEmailTextActionPerformed

    private void serverAddrComboActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_serverAddrComboActionPerformed
        // TODO add your handling code here:
        serverAddrCombo.getItemAt(0);
    }// GEN-LAST:event_serverAddrComboActionPerformed

    private void srvListButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_srvListButtonActionPerformed
        serverAddrCombo.removeAllItems();
        try {
            String[] serverListStr = serverList.getServerList();
            for (String string : serverListStr) {
                serverAddrCombo.addItem(string);
            }
        } catch (Exception e) {
            setErrorMessage(Text.getString("error.loading.server.list"));
        }
    }// GEN-LAST:event_srvListButtonActionPerformed

    private void changeGamePathButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_changeGamePathButtonActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String path = file.getAbsolutePath();
            pathLabel.setText(path);
            Main.saveGamePath(path);
            checkGameFile(path);
        }
    }// GEN-LAST:event_changeGamePathButtonActionPerformed

    private void launchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_launchButtonActionPerformed
        String token = loginOkVO.getLoginToken();
        String userId = loginOkVO.getUserId();
        String srvStr = getUrl() + "/soapbox-race-core/Engine.svc";
        String gamePath = pathLabel.getText();
        ProcessBuilder processBuilder = new ProcessBuilder(gamePath, "US", srvStr, token, userId);
        try {
            processBuilder.start();
            System.exit(0);
        } catch (IOException e) {
            setErrorMessage(e.getMessage());
        }
    }// GEN-LAST:event_launchButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_createButtonActionPerformed

        if (!Main.copyModules(pathLabel.getText())) {
            setErrorMessage(Text.getString("error.module.to.game.files"));
            launchButton.setEnabled(false);
            return;
        }
        try {
            String url = getUrl();
            String email = createEmailText.getText();
            String password1 = new String(createPasswd1Text.getPassword());
            String password2 = new String(createPasswd2Text.getPassword());
            String ticket = createTicketText.getText();
            LoginCreate create = Main.create(url, email, password1);
            boolean doCreate = create.doCreate(password2, ticket);
            if (!doCreate) {
                launchButton.setEnabled(false);
                setErrorMessage(create.getMessage());
            } else {
                launchButton.setEnabled(true);
                setMessage(create.getMessage() + Text.getString("main.launch.game"));
            }
            loginOkVO = create.getLoginOkVO();
        } catch (Exception e) {
            setErrorMessage(e.getMessage());
        }
    }// GEN-LAST:event_createButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_loginButtonActionPerformed
        if (!Main.copyModules(pathLabel.getText())) {
            setErrorMessage(Text.getString("error.module.to.game.files"));
            launchButton.setEnabled(false);
            return;
        }
        String url = getUrl();
        String email = loginEmailText.getText();
        String password = new String(loginPasswordText.getPassword());
        LoginCreate login = Main.login(url, email, password, loginSaveCredentialsCheckBox.isSelected());
        if (login.doLogin()) {
            loginOkVO = login.getLoginOkVO();
            launchButton.setEnabled(true);
            setMessage(Text.getString("message.login.ok.launch.game"));
        } else {
            loginOkVO = null;
            String message = login.getMessage();
            launchButton.setEnabled(false);
            setErrorMessage(message);
        }
    }// GEN-LAST:event_loginButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChangeLauncherLanguageLabel;
    private javax.swing.JComboBox<String> ChooseLauncherLanguage;
    private javax.swing.JButton ConfirmLanguageChange;
    private javax.swing.JTextField EmailForPassword;
    private javax.swing.JLabel ForgotYourPassword;
    private javax.swing.JLabel ForgotYourPasswordRedirect;
    private javax.swing.JButton SendEmail;
    private javax.swing.JButton changeGamePathButton;
    private javax.swing.JButton createButton;
    private javax.swing.JTextField createEmailText;
    private javax.swing.JPasswordField createPasswd1Text;
    private javax.swing.JPasswordField createPasswd2Text;
    private javax.swing.JTextField createTicketText;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton launchButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField loginEmailText;
    private javax.swing.JPasswordField loginPasswordText;
    private javax.swing.JTabbedPane loginRegisterTabbedPanel;
    private javax.swing.JCheckBox loginSaveCredentialsCheckBox;
    private javax.swing.JPanel loginTab;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel messageBase;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPanel optionsTab;
    private javax.swing.JLabel pathLabel;
    private javax.swing.JPanel registerTab;
    private javax.swing.JComboBox<String> serverAddrCombo;
    private javax.swing.JButton serverInfoButton;
    private javax.swing.JButton srvListButton;
    // End of variables declaration//GEN-END:variables

    public void setErrorMessage(String message) {
        messageLabel.setText("<html><font color='red'><b>" + message + "</b></font></html>");
    }

    public void setMessage(String message) {
        messageLabel.setText("<html><b>" + message + "</b></html>");
    }

    public void enableAll() {
        loginRegisterTabbedPanel.setEnabled(true);
        loginEmailText.setEnabled(true);
        loginPasswordText.setEnabled(true);
        loginSaveCredentialsCheckBox.setEnabled(true);
        loginButton.setEnabled(true);
    }

    public void disableAll() {
        loginRegisterTabbedPanel.setSelectedIndex(0);
        loginRegisterTabbedPanel.setEnabled(false);
        loginEmailText.setEnabled(false);
        loginPasswordText.setEnabled(false);
        loginSaveCredentialsCheckBox.setEnabled(false);
        loginButton.setEnabled(false);
    }

    private void checkGameFile(String path) {
        if (Main.checkGameMd5(path)) {
            enableAll();
            setMessage(Text.getString("message.soapbox"));
        } else {
            disableAll();
            setErrorMessage(Text.getString("error.invalid.or.modded.game.file"));
        }
    }

    public String getUrl() {
        String selectedItem = (String) serverAddrCombo.getSelectedItem();
        String[] split = selectedItem.split(";");
        System.out.println(split[1]);
        return split[1];
    }

}
